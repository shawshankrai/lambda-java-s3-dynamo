AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  s3-lambda

Parameters:
  AppBucketName:
    Type: String
    Description: "REQUIRED: Unique S3 bucket name to use for the app."
    Default: "aws-report-gen-shashank-iam"
  AppTopicName:
    Type: String
    Description: "REQUIRED: Unique SNS Topic name to use for the app."
    Default: "aws-report-gen-shashank-iam"
  AppSubscriptionName:
    Type: String
    Description: "REQUIRED: Default Subscription for the app."
    Default: "shashank.rai92@gmail.com"
Resources:
  ReportGenerator:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: target/lambda-java-s3-dynamo-1.0-SNAPSHOT.jar
      Handler: handler.Handler
      Runtime: java11
      Description: Java function
      MemorySize: 1024
      Timeout: 60
      Policies:
       - AWSLambdaBasicExecutionRole
       - AWSLambda_ReadOnlyAccess
       - AWSXrayWriteOnlyAccess
       - AWSLambdaVPCAccessExecutionRole
       - AmazonS3FullAccess
       - S3ReadPolicy:
          BucketName: !Ref AppBucketName
       - DynamoDBCrudPolicy:
          TableName: !Ref DynamoDBTable
       - SNSPublishMessagePolicy:
           TopicName: !Ref AppTopicName
      # Tracing: Active
      # Layers:
      #   - !Ref libs
      Events:
        S3NewObjectEventForCITI:
          Type: S3
          Properties:
            Bucket: !Ref AppBucket
            Events: s3:ObjectCreated:*
            Filter:
              S3Key:
                Rules:
                  - Name: prefix
                    Value: "inbound/citi"
                  - Name: suffix
                    Value: ".csv"
        S3NewObjectEventForHSBC:
          Type: S3
          Properties:
            Bucket: !Ref AppBucket
            Events: s3:ObjectCreated:*
            Filter:
              S3Key:
                Rules:
                  - Name: prefix
                    Value: "inbound/hsbc"
                  - Name: suffix
                    Value: ".csv"
                  
  # libs:
  #   Type: AWS::Serverless::LayerVersion
  #   Properties:
  #     LayerName: lambda-java-s3-dynamo-lib
  #     Description: Dependencies for the Java S3 sample app.
  #     ContentUri: build/lambda-java-s3-dynamo-1.0-SNAPSHOT.zip
  #     CompatibleRuntimes:
  #       - java11

  LambdaInvokePermission:
    Type: 'AWS::Lambda::Permission'
    Properties:
      FunctionName: !GetAtt ReportGenerator.Arn
      Action: 'lambda:InvokeFunction'
      Principal: 's3.amazonaws.com'
      SourceAccount: !Sub ${AWS::AccountId}
      SourceArn: !GetAtt AppBucket.Arn

  AppBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref AppBucketName

  DynamoDBTable:
    Type: AWS::DynamoDB::Table
    DeletionPolicy: Retain
    Properties:
      TableName: Row
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST
      ProvisionedThroughput:
        ReadCapacityUnits: 0
        WriteCapacityUnits: 0

  EventInvokeConfig:
    Type: AWS::Lambda::EventInvokeConfig
    Properties:
      FunctionName: !Ref ReportGenerator
      Qualifier: "$LATEST"
      MaximumEventAgeInSeconds: 60
      MaximumRetryAttempts: 0
      DestinationConfig:
        OnSuccess:
          Destination: !Ref SnsTopicSam
        OnFailure:
          Destination: !Ref SnsTopicSam

  SnsTopicSam:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: !Ref AppTopicName
      DisplayName: "Report Generation Status"
      Subscription:
        - Protocol: email
          Endpoint: !Ref AppSubscriptionName
      Tags:
        - Key: Name
          Value: !Ref AppTopicName
