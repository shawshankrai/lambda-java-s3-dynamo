AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: 's3-lambda

  '
Parameters:
  AppBucketName:
    Type: String
    Description: 'REQUIRED: Unique S3 bucket name to use for the app.'
    Default: aws-report-gen-shashank-iam
Resources:
  ReportGenerator:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: s3://aws-lambda-code-location-shashank-iam/e4fb1681372f9c8dd3aaf8feb24d261b
      Handler: handler.Handler
      Runtime: java11
      Description: Java function
      MemorySize: 256
      Timeout: 60
      Policies:
        S3ReadPolicy:
          BucketName:
            Ref: AppBucketName
      Tracing: Active
      Layers:
      - Ref: libs
      Events:
        S3NewObjectEventForCITI:
          Type: S3
          Properties:
            Bucket:
              Ref: AppBucket
            Events: s3:ObjectCreated:*
            Filter:
              S3Key:
                Rules:
                - Name: prefix
                  Value: inbound/citi
                - Name: suffix
                  Value: .csv
        S3NewObjectEventForHSBC:
          Type: S3
          Properties:
            Bucket:
              Ref: AppBucket
            Events: s3:ObjectCreated:*
            Filter:
              S3Key:
                Rules:
                - Name: prefix
                  Value: inbound/hsbc
                - Name: suffix
                  Value: .csv
    Metadata:
      SamResourceId: ReportGenerator
  libs:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: lambda-java-s3-dynamo-lib
      Description: Dependencies for the Java S3 sample app.
      ContentUri: s3://aws-lambda-code-location-shashank-iam/11bbc98079794ae749e3580e8d68b971
      CompatibleRuntimes:
      - java11
    Metadata:
      SamResourceId: libs
  LambdaInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName:
        Fn::GetAtt:
        - ReportGenerator
        - Arn
      Action: lambda:InvokeFunction
      Principal: s3.amazonaws.com
      SourceAccount:
        Fn::Sub: ${AWS::AccountId}
      SourceArn:
        Fn::GetAtt:
        - AppBucket
        - Arn
    Metadata:
      SamResourceId: LambdaInvokePermission
  AppBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName:
        Ref: AppBucketName
    Metadata:
      SamResourceId: AppBucket
